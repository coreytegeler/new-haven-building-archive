aside {
  width: calc(15em + 20vw);
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 2000;
  line-height: 1.5em;
  clear: both;
  background: #fffed3; }
  aside header {
    z-index: 10;
    width: calc(calc(15em + 20vw) - 1em*2);
    position: absolute;
    left: 0;
    top: 0;
    padding: 1em;
    background: #fffed3; }
    aside header .tabs {
      display: flex;
      align-content: space-between; }
      aside header .tabs .tab {
        float: left;
        margin-right: 0.5em; }
        aside header .tabs .tab:hover {
          cursor: pointer; }
        aside header .tabs .tab.glossary, aside header .tabs .tab.index {
          padding: 0.2em auto; }
        aside header .tabs .tab.button {
          width: 1.5em;
          height: 1.5em;
          padding: 1px;
          display: table;
          background-size: contain;
          background-repeat: no-repeat;
          background-position: center; }
          aside header .tabs .tab.button.info {
            background-image: url(/img/i.svg); }
          aside header .tabs .tab.button.close {
            background-image: url(/img/x.svg); }
        aside header .tabs .tab:last-child {
          padding-right: 0; }
      aside header .tabs .search {
        flex-grow: 1; }
        aside header .tabs .search form {
          padding: 0; }
          aside header .tabs .search form input {
            padding: 0.2em;
            background: #fffed3; }
  aside .inner {
    width: calc(100% - 1em*2);
    height: calc(100% - (1em*2 + 2.1em));
    padding: 0 1em;
    margin: 4em 0;
    overflow: auto; }
    aside .inner section {
      width: 100%;
      height: 100%;
      background: #fffed3;
      display: none;
      pointer-events: none; }
      aside .inner section.show {
        display: block;
        pointer-events: all; }
      aside .inner section h1, aside .inner section h2, aside .inner section h3 {
        padding: 0;
        margin: 0; }
      aside .inner section h1 {
        margin-bottom: 0.5em; }
      aside .inner section h3 span::before {
        content: ' '; }
      aside .inner section p {
        margin-top: 0; }
  aside h3 {
    margin: 0;
    clear: both; }
  aside .group {
    width: 100%;
    display: table;
    margin: 0 0 1em 0; }
  aside ul.nested {
    width: 100%;
    margin: 0;
    float: left;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none; }
    aside ul.nested li {
      line-height: 1.1em;
      padding: 0.1em 0;
      display: table; }
      aside ul.nested li.add {
        opacity: 0.25; }
      aside ul.nested li.selected a {
        color: #0724fb; }
      aside ul.nested li a {
        font-size: 1.5em;
        line-height: 1.1em;
        color: black;
        text-decoration: none; }
      aside ul.nested li .title {
        font-size: 1.5em;
        line-height: 1.1em;
        padding-left: 1.4em;
        display: table;
        background-image: url(/img/arrows.svg);
        background-size: 1.2em auto;
        background-repeat: no-repeat;
        background-position: 0 -1.2em; }
        aside ul.nested li .title.toggled {
          background-position: 0 -2.4em; }
        aside ul.nested li .title:hover {
          cursor: pointer; }
      aside ul.nested li ul {
        display: none;
        padding: 0.1em 0 0.1em 3.6em; }
        aside ul.nested li ul.open {
          display: block; }
  .full aside {
    background: transparent;
    pointer-events: none; }
    .full aside section, .full aside header {
      display: none !important; }
    .full aside #closedHeader {
      display: table;
      pointer-events: all; }
  aside #closedHeader {
    font-size: 1.5em;
    display: none; }
    aside #closedHeader:hover {
      cursor: pointer; }

form {
  max-width: 900px;
  padding: 20px; }
  form label {
    font-size: 1em;
    line-height: 1.5em;
    display: table; }
  form input, form textarea, form select {
    font-size: 1em;
    line-height: 1.1em; }
    form input:-webkit-autofill, form textarea:-webkit-autofill, form select:-webkit-autofill {
      background: none; }
  form input {
    -webkit-appearance: none;
    border: 1px solid black;
    outline: none;
    font-family: Arial;
    background: transparent; }
    form input[type="text"], form input[type="email"], form input[type="password"] {
      background: white;
      width: calc(100% - 1em - 2px);
      padding: 0.5em; }
  form textarea {
    width: calc(100% - 1em - 2px);
    padding: 0.5em;
    line-height: 1.5em;
    border: 1px solid black;
    resize: none;
    outline: none;
    background: white; }
  form .group {
    padding: 0 0 20px 0; }
  form .sample {
    display: none; }
  form .row {
    width: 100%;
    display: table;
    margin: 0 0 10px 0;
    clear: both;
    position: relative; }
    form .row .cell {
      float: left; }
      form .row .cell:first-child {
        margin-right: 1em; }
  form [data-template] {
    display: none; }
  form .button {
    display: inline-table;
    margin-right: 10px;
    padding: 2px;
    font-size: 0.8em;
    font-weight: bold;
    text-transform: uppercase;
    color: black;
    text-decoration: none;
    border: 0; }
    form .button:hover {
      cursor: pointer; }
    form .button:last-child {
      margin-right: 0; }

.checkboxes, .options {
  overflow: auto;
  font-size: 1em;
  line-height: 1.1em;
  border: 1px solid black;
  background: white; }
  .checkboxes.populate .item, .options.populate .item {
    opacity: 0; }
  .checkboxes.populate.loaded .item, .options.populate.loaded .item {
    opacity: 1; }
  .checkboxes .checkbox label, .options .checkbox label {
    font-family: inherit;
    font-size: inherit;
    line-height: 1.1em;
    display: table;
    padding: 5px 0; }
    .checkboxes .checkbox label:active, .checkboxes .checkbox label:hover, .options .checkbox label:active, .options .checkbox label:hover {
      cursor: pointer; }
  .checkboxes .checkbox input[type="checkbox"], .checkboxes .checkbox input[type="radio"], .options .checkbox input[type="checkbox"], .options .checkbox input[type="radio"] {
    display: none; }
    .checkboxes .checkbox input[type="checkbox"]:checked ~ label::before, .checkboxes .checkbox input[type="radio"]:checked ~ label::before, .options .checkbox input[type="checkbox"]:checked ~ label::before, .options .checkbox input[type="radio"]:checked ~ label::before {
      background: black; }

.checkboxes {
  max-height: 6.5em;
  padding: 0.2em 0.5em; }
  .checkboxes .checkbox label::before {
    width: 0.55em;
    height: 0.55em;
    margin-right: 0.5em;
    border-radius: 50%;
    border: solid black 0.1em;
    font-size: inherit;
    display: inline-block;
    content: ''; }

.selects {
  display: flex;
  border-bottom: solid black 0.1em;
  padding: 0.15em 0; }
  .selects .select {
    background: transparent;
    position: relative; }
    .selects .select .display {
      display: inline-block;
      padding: 0 1.1em 0 0.6em;
      cursor: pointer; }
    .selects .select .options {
      max-height: calc(1.8em * 10);
      position: absolute;
      left: 0;
      top: calc(100% + 0.15em);
      padding: 0 0.5em;
      display: none; }
      .selects .select .options.open {
        display: block; }

.selects.date .select {
  position: relative; }
  .selects.date .select.month .display {
    width: 6em; }
  .selects.date .select.day .display {
    width: 1.5em; }
  .selects.date .select.year .display {
    width: 2.5em; }
  .selects.date .select:not(:last-child) .display:after {
    content: '/';
    position: absolute;
    right: 0;
    top: 0; }

.quickCreate {
  width: calc(100% - calc(15em + 20vw));
  height: 100%;
  padding: 0;
  position: fixed;
  left: calc(15em + 20vw);
  top: 0;
  overflow: auto;
  display: none;
  background: rgba(255, 255, 255, 0.95); }
  .quickCreate .inner {
    width: calc(100% - 6em);
    max-width: 900px;
    padding: 3em;
    margin: auto;
    display: table; }
    .quickCreate .inner form {
      padding: 0; }
  .quickCreate.open {
    display: block; }
  .quickCreate .close {
    width: 1.5em;
    height: 1.5em;
    padding: 1px;
    position: absolute;
    right: 1em;
    top: 1em;
    background-position: center;
    background-repeat: no-repeat;
    background-size: contain;
    background-image: url(/img/x.svg); }
    .quickCreate .close:hover {
      cursor: pointer; }

html {
  width: 100%;
  height: 100%;
  margin: 0;
  background: white;
  overflow: hidden; }
  html * {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: geometricPrecision; }
  html body {
    width: 100%;
    height: 100%;
    overflow: auto;
    margin: 0;
    font-family: Arial;
    font-weight: bold;
    font-size: 18px;
    line-height: 1.8em; }

h1 {
  font-size: 1.5em;
  padding: 0 0 20px 0;
  margin: 0; }

h1, h2, h3, h4 {
  margin: 0; }

ul {
  list-style: none;
  padding: 0;
  margin: 0; }
  ul li {
    list-style: none; }

a {
  color: black;
  text-decoration: none; }

main {
  width: 100%;
  height: 100%; }
  main.noscroll {
    overflow: hidden; }
  main .inner {
    padding: 20px; }

.square {
  width: 0.65em;
  height: 0.65em;
  display: inline-block; }

.vert {
  display: table-cell;
  vertical-align: middle; }

.horz {
  display: table;
  margin-left: auto;
  margin-right: auto; }

main {
  position: relative; }

aside section#single .gMapWrap, aside section#single .streetViewWrap {
  width: 100%;
  height: 20em;
  position: relative;
  padding: 0; }
  aside section#single .gMapWrap .gMap, aside section#single .gMapWrap .streetView, aside section#single .streetViewWrap .gMap, aside section#single .streetViewWrap .streetView {
    width: 100%;
    height: 100%;
    position: absolute;
    left: 0;
    top: 0;
    pointer-events: none; }
  aside section#single .gMapWrap .loader, aside section#single .streetViewWrap .loader {
    background: #f0f0f0; }
  aside section#single .gMapWrap.show .gMap, aside section#single .gMapWrap.show .streetView, aside section#single .streetViewWrap.show .gMap, aside section#single .streetViewWrap.show .streetView {
    pointer-events: all; }
  aside section#single .gMapWrap.show .loader, aside section#single .streetViewWrap.show .loader {
    opacity: 0; }
aside section#single .paragraphs {
  white-space: pre-line; }
aside section#single .tour h4 {
  margin-bottom: 0.5em; }
  aside section#single .tour h4 a {
    border-bottom: black 2px dashed; }
aside section#single .buildings .building {
  width: 100%;
  margin-bottom: 1em; }
  aside section#single .buildings .building a {
    display: flex; }
  aside section#single .buildings .building .index {
    display: table;
    margin-right: 0.4em;
    align-self: center; }
    aside section#single .buildings .building .index .circle {
      width: 1.3em;
      height: 1.3em;
      border: 1px solid black;
      border-radius: 50%;
      display: table-cell;
      vertical-align: middle;
      line-height: 1;
      text-align: center; }
  aside section#single .buildings .building .image {
    height: 140px;
    margin-right: 0.4em;
    background: rgba(255, 0, 0, 0.3);
    flex-grow: 1; }
  aside section#single .buildings .building .meta {
    width: 50%;
    font-size: inherit;
    line-height: 1.2em; }

.loader {
  width: 100%;
  height: 100%;
  position: absolute;
  left: 0;
  top: 0;
  opacity: 1;
  transition: all 500ms ease;
  pointer-events: none;
  z-index: 100; }

.mapWrap {
  width: 100%;
  height: 100%;
  position: absolute !important;
  top: 0;
  display: inline-block;
  overflow: hidden; }
  .mapWrap .map {
    min-width: calc(100% - calc(15em + 20vw));
    display: table;
    position: absolute;
    z-index: 9;
    display: block; }

.buildings.map .building {
  padding: 2em;
  display: table;
  float: left;
  background: transparent !important; }
  .buildings.map .building a {
    display: table;
    font-size: 0.8em; }
  .buildings.map .building .image {
    margin-bottom: .5em;
    display: block;
    background: rgba(255, 0, 0, 0.3);
    border: 1px solid transparent; }
  .buildings.map .building.selected .image {
    border-color: black;
    background: transparent; }
  .buildings.map .building.hidden {
    display: none; }

/*# sourceMappingURL=style.css.map */
