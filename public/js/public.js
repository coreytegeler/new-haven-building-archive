// Generated by CoffeeScript 1.10.0
(function() {
  $(function() {
    var $buildingMap, $buildingWrap, $buildings, $main, constrainArray, handleBuildings, hoverBuilding, init, resizeMap, selectBuilding, unhoverBuilding;
    $main = $('main');
    $buildingWrap = $('.mapWrap.buildings');
    $buildingMap = $('.map.buildings');
    $buildings = $('.building');
    init = function() {
      $buildingMap.masonry({
        transitionDuration: 0
      });
      resizeMap();
      $(window).resize(resizeMap);
      handleBuildings();
      return $buildingMap.pep({
        useCSSTranslation: false,
        constrainTo: constrainArray(),
        start: function(event) {
          $buildingMap.addClass('dragged');
          return $buildingMap.addClass('dragging');
        },
        stop: function() {
          return $buildingMap.removeClass('dragging');
        }
      });
    };
    constrainArray = function() {
      var hDiff, wDiff;
      wDiff = $buildingMap.width() - $buildingWrap.innerWidth();
      hDiff = $buildingMap.height() - $buildingWrap.innerHeight();
      return [-hDiff, 0, 0, -wDiff];
    };
    resizeMap = function() {
      var $window, edge, height, larger, left, length, smaller, top, width;
      $window = $(window);
      length = $buildings.length;
      smaller = Math.floor(Math.sqrt(length));
      larger = Math.round(Math.sqrt(length));
      edge = $buildings.eq(0).innerWidth();
      width = larger * edge;
      height = smaller * edge;
      $buildingMap.css({
        width: width + 'px',
        height: height + 'px'
      });
      $buildingMap.masonry('layout');
      if (!$buildingMap.is('.dragged')) {
        width = $buildingMap.width();
        height = $buildingMap.height();
        left = $buildingWrap.innerWidth() / 2 - width / 2;
        top = $buildingWrap.innerHeight() / 2 - height / 2;
        $buildingMap.css({
          left: left,
          top: top
        });
      }
    };
    handleBuildings = function() {
      $('body').on('mouseenter', '.building a', function() {
        return hoverBuilding(this);
      });
      $('body').on('mouseleave', '.building a', function() {
        return unhoverBuilding(this);
      });
      return $('body').on('click', '.building a', function() {
        return selectBuilding(this);
      });
    };
    hoverBuilding = function(self) {
      var $building, parent, slug;
      parent = $(self).parents('.building')[0];
      slug = parent.dataset.slug;
      $building = $('.building[data-slug="' + slug + '"]');
      return $building.addClass('hover');
    };
    unhoverBuilding = function(self) {
      var $building, parent, slug;
      parent = $(self).parents('.building')[0];
      slug = parent.dataset.slug;
      $building = $('.building[data-slug="' + slug + '"]');
      return $building.removeClass('hover');
    };
    selectBuilding = function(self) {
      var $building, parent, slug, url;
      event.preventDefault();
      if ($buildingMap.is('.dragging')) {
        return;
      }
      parent = $(self).parents('.building')[0];
      slug = parent.dataset.slug;
      url = self.href;
      $building = $('.building[data-slug="' + slug + '"]');
      if (!$building) {
        return;
      }
      $('.building.selected').removeClass('selected');
      $building.addClass('selected');
      return window.history.pushState('', document.title, url);
    };
    return init();
  });

}).call(this);
