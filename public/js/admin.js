// Generated by CoffeeScript 1.10.0
(function() {
  var $main, addCheckbox, addImage, addQuickCreates, askToDelete, getData, openQuickCreate, openSelect, quickCreate, updateSelectValue, updateTemplate;

  $main = $('main');

  $(function() {
    getData();
    $('.add').click(openQuickCreate);
    $('a.delete').click(askToDelete);
    $('.select .display').click(openSelect);
    $('.select .options input').change(updateSelectValue);
    $('.updateTemplate input').change(updateTemplate);
  });

  getData = function() {
    addQuickCreates('image');
    $('.populate').each(function(i, container) {
      var containerType, modelType;
      modelType = $(container).data('model');
      containerType = $(container).data('type');
      addQuickCreates(modelType);
      $.ajax({
        url: '/api/?type=' + modelType + '&format=json',
        error: function(jqXHR, status, error) {
          console.log(jqXHR, status, error);
        },
        success: function(objects, status, jqXHR) {
          if (!objects) {
            return;
          }
          switch (containerType) {
            case 'checkboxes':
              $(objects).each(function(i, object) {
                return addCheckbox(container, object);
              });
          }
          $(container).addClass('loaded');
        }
      });
    });
  };

  addCheckbox = function(container, object) {
    var $clone, $input, $label, checked, model, value;
    $clone = $(container).find('.sample').clone().removeClass('sample');
    $label = $clone.find('label');
    $input = $clone.find('input');
    value = object._id;
    $input.attr('value', value).attr('id', object.slug + 'Checkbox');
    $label.text(object.name).attr('for', object.slug + 'Checkbox');
    model = $(container).data('model');
    checked = $(container).data('checked');
    if (checked) {
      if (value === checked || checked.indexOf(value) > -1) {
        $input.attr('checked', true);
      }
    }
    $clone.attr('data-slug', object.slug).appendTo(container);
  };

  openSelect = function(event) {
    var $options, $select, datetype;
    $select = $(event.target).parents('.select');
    datetype = $select.attr('data-datetype');
    $options = $select.find('.options');
    $select.siblings('.select').find('.options').removeClass('open');
    $options.toggleClass('open');
  };

  updateSelectValue = function(event) {
    var $display, $options, $select, option, value;
    option = event.target;
    value = option.value;
    $select = $(option).parents('.select');
    $options = $select.find('.options');
    $display = $select.find('.display');
    $display.html(value);
    $options.removeClass('open');
  };

  addQuickCreates = function(type) {
    $.ajax({
      url: '/admin/' + type + '/quick-create',
      error: function(jqXHR, status, error) {
        console.log(jqXHR, status, error);
      },
      success: function(html, status, jqXHR) {
        if (!html) {
          return;
        }
        $main.addClass('noscroll');
        return $('.quickCreates').append(html);
      }
    });
  };

  openQuickCreate = function(event) {
    var $button, $close, $form, $module, $quickCreate, type;
    $button = $(event.target);
    type = $button.data('model');
    $module = $button.parents('.module');
    $quickCreate = $('.quickCreate[data-model="' + type + '"]');
    $quickCreate.addClass('open');
    $form = $quickCreate.find('form');
    $form.submit(quickCreate);
    $close = $quickCreate.find('.close');
    $close.click(function() {
      $quickCreate.removeClass('open');
      return $main.removeClass('noscroll');
    });
  };

  quickCreate = function(event) {
    var $form, $quickCreate, caption, data, image, postUrl, type;
    event.stopPropagation();
    event.preventDefault();
    $form = $(this);
    $quickCreate = $form.parents('.quickCreate');
    type = $quickCreate.data('model');
    if (type === 'image') {
      data = new FormData();
      image = $form.find('input:file')[0].files[0];
      caption = $form.find('input.caption').val();
      data.append('image', image, image.name);
      data.append('caption', caption);
    } else {
      data = $form.serializeArray();
    }
    postUrl = $form.attr('action');
    $.ajax({
      type: 'POST',
      data: data,
      url: postUrl,
      processData: false,
      contentType: false,
      error: function(jqXHR, status, error) {
        return console.log(jqXHR, status, error);
      },
      success: function(object, status, jqXHR) {
        var checkboxes;
        type = $quickCreate.data('model');
        checkboxes = $('.checkboxes.' + type);
        $quickCreate.removeClass('open');
        $main.removeClass('noscroll');
        if (checkboxes.length) {
          return addCheckbox(checkboxes, object, [object.slug]);
        } else if (type === 'image') {
          return addImage(object);
        }
      }
    });
  };

  addImage = function(object) {
    var $clone, $imagesWrapper, imageObject;
    $imagesWrapper = $('.images');
    $clone = $imagesWrapper.find('.sample').clone();
    $clone.removeClass('sample');
    imageObject = {
      id: object._id,
      path: object.path,
      caption: object.caption
    };
    $clone.val(JSON.stringify(imageObject));
    $clone.attr('name', 'images[5]');
    return $imagesWrapper.append($clone);
  };

  updateTemplate = function(event) {
    var $input, value;
    $input = $(event.target);
    value = $input.val();
    $('[data-template]').removeClass('show');
    return $('[data-template="' + value + '"]').addClass('show');
  };

  askToDelete = function(event) {
    if (!confirm('Are you sure you want to delete this?')) {
      return event.preventDefault();
    }
  };

}).call(this);
